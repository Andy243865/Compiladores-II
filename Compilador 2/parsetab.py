
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BOOL BOOL_VALUE COMMA COMMENT DIVIDE DO ELSE EQUALS FI FLOAT FLOAT_NUMBER GREATER GREATEREQUAL IDENTIFIER IF INT LBRACE LESS LESSEQUAL LPAREN MAIN MINUS MULTILINE_COMMENT NOTEQUALS NUMBER OR PLUS RBRACE RPAREN SEMICOLON THEN TIMES UNTIL WHILE WRITEmain : MAIN LBRACE declarations statements RBRACEdeclarations : declarations declaration\n                    | emptydeclaration : INT var_list SEMICOLON\n                   | FLOAT var_list SEMICOLON\n                   | BOOL var_list SEMICOLONvar_list : var_list COMMA IDENTIFIER\n                | IDENTIFIERdo_until_statement : DO LBRACE statements RBRACE UNTIL LPAREN condition RPAREN SEMICOLONstatements : statements statement\n                  | emptystatement : assignment\n                 | if_statement\n                 | write_statement\n                 | do_statement\n                 | while_statement\n                 | do_until_statementassignment : IDENTIFIER ASSIGN expression SEMICOLONif_statement : IF LPAREN condition RPAREN THEN LBRACE statements RBRACE ELSE LBRACE statements RBRACE FI\n                    | IF LPAREN condition RPAREN THEN LBRACE statements RBRACE FIwrite_statement : WRITE expression SEMICOLONdo_statement : DO LBRACE statements RBRACE WHILE LPAREN condition RPAREN SEMICOLONwhile_statement : WHILE LPAREN condition RPAREN LBRACE statements RBRACEexpression : expression PLUS term\n                  | expression MINUS term\n                  | termterm : term TIMES factor\n            | term DIVIDE factor\n            | factorfactor : LPAREN expression RPAREN\n              | NUMBER\n              | FLOAT_NUMBER\n              | IDENTIFIER\n              | BOOL_VALUEcondition : expression EQUALS expression\n                 | expression NOTEQUALS expression\n                 | expression LESS expression\n                 | expression LESSEQUAL expression\n                 | expression GREATER expression\n                 | expression GREATEREQUAL expression\n                 | expression AND expression\n                 | expression OR expressionempty :expression : expression PLUS empty\n                  | expression MINUS empty'
    
_lr_action_items = {'MAIN':([0,],[2,]),'$end':([1,12,],[0,-1,]),'LBRACE':([2,23,75,76,99,],[3,39,87,88,103,]),'INT':([3,4,5,7,41,43,44,],[-43,9,-3,-2,-4,-5,-6,]),'FLOAT':([3,4,5,7,41,43,44,],[-43,10,-3,-2,-4,-5,-6,]),'BOOL':([3,4,5,7,41,43,44,],[-43,11,-3,-2,-4,-5,-6,]),'RBRACE':([3,4,5,6,7,8,13,14,15,16,17,18,19,39,41,43,44,48,54,57,87,88,91,92,95,100,101,102,103,104,106,],[-43,-43,-3,12,-2,-11,-10,-12,-13,-14,-15,-16,-17,-43,-4,-5,-6,-21,74,-18,-43,-43,95,96,-23,-20,-22,-9,-43,105,-19,]),'IDENTIFIER':([3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,22,29,30,34,39,40,41,42,43,44,48,49,50,51,52,54,57,59,60,61,62,63,64,65,66,87,88,89,90,91,92,95,100,101,102,103,104,106,],[-43,-43,-3,20,-2,-11,26,26,26,-10,-12,-13,-14,-15,-16,-17,37,37,37,37,-43,37,-4,56,-5,-6,-21,37,37,37,37,20,-18,37,37,37,37,37,37,37,37,-43,-43,37,37,20,20,-23,-20,-22,-9,-43,20,-19,]),'IF':([3,4,5,6,7,8,13,14,15,16,17,18,19,39,41,43,44,48,54,57,87,88,91,92,95,100,101,102,103,104,106,],[-43,-43,-3,21,-2,-11,-10,-12,-13,-14,-15,-16,-17,-43,-4,-5,-6,-21,21,-18,-43,-43,21,21,-23,-20,-22,-9,-43,21,-19,]),'WRITE':([3,4,5,6,7,8,13,14,15,16,17,18,19,39,41,43,44,48,54,57,87,88,91,92,95,100,101,102,103,104,106,],[-43,-43,-3,22,-2,-11,-10,-12,-13,-14,-15,-16,-17,-43,-4,-5,-6,-21,22,-18,-43,-43,22,22,-23,-20,-22,-9,-43,22,-19,]),'DO':([3,4,5,6,7,8,13,14,15,16,17,18,19,39,41,43,44,48,54,57,87,88,91,92,95,100,101,102,103,104,106,],[-43,-43,-3,23,-2,-11,-10,-12,-13,-14,-15,-16,-17,-43,-4,-5,-6,-21,23,-18,-43,-43,23,23,-23,-20,-22,-9,-43,23,-19,]),'WHILE':([3,4,5,6,7,8,13,14,15,16,17,18,19,39,41,43,44,48,54,57,74,87,88,91,92,95,100,101,102,103,104,106,],[-43,-43,-3,24,-2,-11,-10,-12,-13,-14,-15,-16,-17,-43,-4,-5,-6,-21,24,-18,85,-43,-43,24,24,-23,-20,-22,-9,-43,24,-19,]),'ASSIGN':([20,],[29,]),'LPAREN':([21,22,24,29,30,34,40,49,50,51,52,59,60,61,62,63,64,65,66,85,86,89,90,],[30,34,40,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,89,90,34,34,]),'NUMBER':([22,29,30,34,40,49,50,51,52,59,60,61,62,63,64,65,66,89,90,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'FLOAT_NUMBER':([22,29,30,34,40,49,50,51,52,59,60,61,62,63,64,65,66,89,90,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'BOOL_VALUE':([22,29,30,34,40,49,50,51,52,59,60,61,62,63,64,65,66,89,90,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'SEMICOLON':([25,26,27,28,31,32,33,35,36,37,38,45,49,50,56,67,68,69,70,71,72,73,97,98,],[41,-8,43,44,48,-26,-29,-31,-32,-33,-34,57,-43,-43,-7,-24,-44,-25,-45,-27,-28,-30,101,102,]),'COMMA':([25,26,27,28,56,],[42,-8,42,42,-7,]),'PLUS':([31,32,33,35,36,37,38,45,47,49,50,53,67,68,69,70,71,72,73,77,78,79,80,81,82,83,84,],[49,-26,-29,-31,-32,-33,-34,49,49,-43,-43,49,-24,-44,-25,-45,-27,-28,-30,49,49,49,49,49,49,49,49,]),'MINUS':([31,32,33,35,36,37,38,45,47,49,50,53,67,68,69,70,71,72,73,77,78,79,80,81,82,83,84,],[50,-26,-29,-31,-32,-33,-34,50,50,-43,-43,50,-24,-44,-25,-45,-27,-28,-30,50,50,50,50,50,50,50,50,]),'EQUALS':([32,33,35,36,37,38,47,49,50,67,68,69,70,71,72,73,],[-26,-29,-31,-32,-33,-34,59,-43,-43,-24,-44,-25,-45,-27,-28,-30,]),'NOTEQUALS':([32,33,35,36,37,38,47,49,50,67,68,69,70,71,72,73,],[-26,-29,-31,-32,-33,-34,60,-43,-43,-24,-44,-25,-45,-27,-28,-30,]),'LESS':([32,33,35,36,37,38,47,49,50,67,68,69,70,71,72,73,],[-26,-29,-31,-32,-33,-34,61,-43,-43,-24,-44,-25,-45,-27,-28,-30,]),'LESSEQUAL':([32,33,35,36,37,38,47,49,50,67,68,69,70,71,72,73,],[-26,-29,-31,-32,-33,-34,62,-43,-43,-24,-44,-25,-45,-27,-28,-30,]),'GREATER':([32,33,35,36,37,38,47,49,50,67,68,69,70,71,72,73,],[-26,-29,-31,-32,-33,-34,63,-43,-43,-24,-44,-25,-45,-27,-28,-30,]),'GREATEREQUAL':([32,33,35,36,37,38,47,49,50,67,68,69,70,71,72,73,],[-26,-29,-31,-32,-33,-34,64,-43,-43,-24,-44,-25,-45,-27,-28,-30,]),'AND':([32,33,35,36,37,38,47,49,50,67,68,69,70,71,72,73,],[-26,-29,-31,-32,-33,-34,65,-43,-43,-24,-44,-25,-45,-27,-28,-30,]),'OR':([32,33,35,36,37,38,47,49,50,67,68,69,70,71,72,73,],[-26,-29,-31,-32,-33,-34,66,-43,-43,-24,-44,-25,-45,-27,-28,-30,]),'RPAREN':([32,33,35,36,37,38,46,49,50,53,55,67,68,69,70,71,72,73,77,78,79,80,81,82,83,84,93,94,],[-26,-29,-31,-32,-33,-34,58,-43,-43,73,75,-24,-44,-25,-45,-27,-28,-30,-35,-36,-37,-38,-39,-40,-41,-42,97,98,]),'TIMES':([32,33,35,36,37,38,67,69,71,72,73,],[51,-29,-31,-32,-33,-34,51,51,-27,-28,-30,]),'DIVIDE':([32,33,35,36,37,38,67,69,71,72,73,],[52,-29,-31,-32,-33,-34,52,52,-27,-28,-30,]),'THEN':([58,],[76,]),'UNTIL':([74,],[86,]),'ELSE':([96,],[99,]),'FI':([96,105,],[100,106,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'declarations':([3,],[4,]),'empty':([3,4,39,49,50,87,88,103,],[5,8,8,68,70,8,8,8,]),'statements':([4,39,87,88,103,],[6,54,91,92,104,]),'declaration':([4,],[7,]),'statement':([6,54,91,92,104,],[13,13,13,13,13,]),'assignment':([6,54,91,92,104,],[14,14,14,14,14,]),'if_statement':([6,54,91,92,104,],[15,15,15,15,15,]),'write_statement':([6,54,91,92,104,],[16,16,16,16,16,]),'do_statement':([6,54,91,92,104,],[17,17,17,17,17,]),'while_statement':([6,54,91,92,104,],[18,18,18,18,18,]),'do_until_statement':([6,54,91,92,104,],[19,19,19,19,19,]),'var_list':([9,10,11,],[25,27,28,]),'expression':([22,29,30,34,40,59,60,61,62,63,64,65,66,89,90,],[31,45,47,53,47,77,78,79,80,81,82,83,84,47,47,]),'term':([22,29,30,34,40,49,50,59,60,61,62,63,64,65,66,89,90,],[32,32,32,32,32,67,69,32,32,32,32,32,32,32,32,32,32,]),'factor':([22,29,30,34,40,49,50,51,52,59,60,61,62,63,64,65,66,89,90,],[33,33,33,33,33,33,33,71,72,33,33,33,33,33,33,33,33,33,33,]),'condition':([30,40,89,90,],[46,55,93,94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> MAIN LBRACE declarations statements RBRACE','main',5,'p_main','compilador.py',133),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','compilador.py',137),
  ('declarations -> empty','declarations',1,'p_declarations','compilador.py',138),
  ('declaration -> INT var_list SEMICOLON','declaration',3,'p_declaration','compilador.py',145),
  ('declaration -> FLOAT var_list SEMICOLON','declaration',3,'p_declaration','compilador.py',146),
  ('declaration -> BOOL var_list SEMICOLON','declaration',3,'p_declaration','compilador.py',147),
  ('var_list -> var_list COMMA IDENTIFIER','var_list',3,'p_var_list','compilador.py',151),
  ('var_list -> IDENTIFIER','var_list',1,'p_var_list','compilador.py',152),
  ('do_until_statement -> DO LBRACE statements RBRACE UNTIL LPAREN condition RPAREN SEMICOLON','do_until_statement',9,'p_do_until_statement','compilador.py',159),
  ('statements -> statements statement','statements',2,'p_statements','compilador.py',164),
  ('statements -> empty','statements',1,'p_statements','compilador.py',165),
  ('statement -> assignment','statement',1,'p_statement','compilador.py',172),
  ('statement -> if_statement','statement',1,'p_statement','compilador.py',173),
  ('statement -> write_statement','statement',1,'p_statement','compilador.py',174),
  ('statement -> do_statement','statement',1,'p_statement','compilador.py',175),
  ('statement -> while_statement','statement',1,'p_statement','compilador.py',176),
  ('statement -> do_until_statement','statement',1,'p_statement','compilador.py',177),
  ('assignment -> IDENTIFIER ASSIGN expression SEMICOLON','assignment',4,'p_assignment','compilador.py',181),
  ('if_statement -> IF LPAREN condition RPAREN THEN LBRACE statements RBRACE ELSE LBRACE statements RBRACE FI','if_statement',13,'p_if_statement','compilador.py',198),
  ('if_statement -> IF LPAREN condition RPAREN THEN LBRACE statements RBRACE FI','if_statement',9,'p_if_statement','compilador.py',199),
  ('write_statement -> WRITE expression SEMICOLON','write_statement',3,'p_write_statement','compilador.py',206),
  ('do_statement -> DO LBRACE statements RBRACE WHILE LPAREN condition RPAREN SEMICOLON','do_statement',9,'p_do_statement','compilador.py',210),
  ('while_statement -> WHILE LPAREN condition RPAREN LBRACE statements RBRACE','while_statement',7,'p_while_statement','compilador.py',216),
  ('expression -> expression PLUS term','expression',3,'p_expression','compilador.py',220),
  ('expression -> expression MINUS term','expression',3,'p_expression','compilador.py',221),
  ('expression -> term','expression',1,'p_expression','compilador.py',222),
  ('term -> term TIMES factor','term',3,'p_term','compilador.py',229),
  ('term -> term DIVIDE factor','term',3,'p_term','compilador.py',230),
  ('term -> factor','term',1,'p_term','compilador.py',231),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','compilador.py',238),
  ('factor -> NUMBER','factor',1,'p_factor','compilador.py',239),
  ('factor -> FLOAT_NUMBER','factor',1,'p_factor','compilador.py',240),
  ('factor -> IDENTIFIER','factor',1,'p_factor','compilador.py',241),
  ('factor -> BOOL_VALUE','factor',1,'p_factor','compilador.py',242),
  ('condition -> expression EQUALS expression','condition',3,'p_condition','compilador.py',250),
  ('condition -> expression NOTEQUALS expression','condition',3,'p_condition','compilador.py',251),
  ('condition -> expression LESS expression','condition',3,'p_condition','compilador.py',252),
  ('condition -> expression LESSEQUAL expression','condition',3,'p_condition','compilador.py',253),
  ('condition -> expression GREATER expression','condition',3,'p_condition','compilador.py',254),
  ('condition -> expression GREATEREQUAL expression','condition',3,'p_condition','compilador.py',255),
  ('condition -> expression AND expression','condition',3,'p_condition','compilador.py',256),
  ('condition -> expression OR expression','condition',3,'p_condition','compilador.py',257),
  ('empty -> <empty>','empty',0,'p_empty','compilador.py',264),
  ('expression -> expression PLUS empty','expression',3,'p_expression_incomplete','compilador.py',283),
  ('expression -> expression MINUS empty','expression',3,'p_expression_incomplete','compilador.py',284),
]
