IDENTIFIER, main
SYMBOL, {
IDENTIFIER, int
IDENTIFIER, x
SYMBOL, ,
IDENTIFIER, z
SYMBOL, ;
IDENTIFIER, double
IDENTIFIER, a
SYMBOL, ,
IDENTIFIER, b
SYMBOL, ,
IDENTIFIER, c
SYMBOL, ,
IDENTIFIER, y
SYMBOL, ;
IDENTIFIER, x
ASIGN_OPERATOR, =
NUMBER, 23
SYMBOL, ;
IDENTIFIER, y
ASIGN_OPERATOR, =
NUMBER, 2
OPERATOR, +
NUMBER, 3
OPERATOR, -
NUMBER, 1
SYMBOL, ;
IDENTIFIER, z
ASIGN_OPERATOR, =
IDENTIFIER, y
OPERATOR, +
NUMBER, 7
SYMBOL, ;
IDENTIFIER, y
ASIGN_OPERATOR, =
IDENTIFIER, y
OPERATOR, +
NUMBER, 1
SYMBOL, ;
IDENTIFIER, a
ASIGN_OPERATOR, =
REALNUMBER, 24.0
OPERATOR, +
NUMBER, 4
OPERATOR, -
NUMBER, 1
OPERATOR, /
NUMBER, 3
OPERATOR, *
NUMBER, 2
OPERATOR, +
NUMBER, 34
OPERATOR, -
NUMBER, 1
SYMBOL, ;
IDENTIFIER, x
ASIGN_OPERATOR, =
SYMBOL, (
NUMBER, 5
OPERATOR, -
NUMBER, 3
SYMBOL, )
OPERATOR, *
SYMBOL, (
NUMBER, 8
OPERATOR, /
NUMBER, 2
SYMBOL, )
SYMBOL, ;
IDENTIFIER, y
ASIGN_OPERATOR, =
NUMBER, 5
OPERATOR, +
NUMBER, 3
OPERATOR, -
NUMBER, 2
OPERATOR, *
NUMBER, 4
OPERATOR, /
NUMBER, 7
OPERATOR, -
NUMBER, 9
SYMBOL, ;
IDENTIFIER, z
ASIGN_OPERATOR, =
NUMBER, 8
OPERATOR, /
NUMBER, 2
OPERATOR, +
NUMBER, 15
OPERATOR, *
NUMBER, 4
SYMBOL, ;
IDENTIFIER, y
ASIGN_OPERATOR, =
REALNUMBER, 14.54
SYMBOL, ;
IDENTIFIER, if
SYMBOL, (
NUMBER, 2
REL_OPERATOR, >
NUMBER, 3
SYMBOL, )
SYMBOL, {
IDENTIFIER, y
ASIGN_OPERATOR, =
IDENTIFIER, a
OPERATOR, +
NUMBER, 3
SYMBOL, ;
SYMBOL, }
IDENTIFIER, else
SYMBOL, {
IDENTIFIER, if
SYMBOL, (
SYMBOL, (
NUMBER, 4
REL_OPERATOR, >
NUMBER, 2
SYMBOL, )
IDENTIFIER, and
SYMBOL, (
IDENTIFIER, x
REL_OPERATOR, !=
NUMBER, 0
SYMBOL, )
SYMBOL, )
SYMBOL, {
IDENTIFIER, b
ASIGN_OPERATOR, =
REALNUMBER, 3.2
SYMBOL, ;
SYMBOL, }
IDENTIFIER, else
SYMBOL, {
IDENTIFIER, b
ASIGN_OPERATOR, =
REALNUMBER, 5.0
SYMBOL, ;
SYMBOL, }
IDENTIFIER, y
ASIGN_OPERATOR, =
IDENTIFIER, y
OPERATOR, +
NUMBER, 1
SYMBOL, ;
SYMBOL, }
IDENTIFIER, a
OPERATOR, ++
SYMBOL, ;
IDENTIFIER, a
OPERATOR, --
SYMBOL, ;
IDENTIFIER, x
ASIGN_OPERATOR, =
NUMBER, 3
OPERATOR, +
NUMBER, 4
SYMBOL, ;
IDENTIFIER, do
SYMBOL, {
IDENTIFIER, y
ASIGN_OPERATOR, =
SYMBOL, (
IDENTIFIER, y
OPERATOR, +
NUMBER, 1
SYMBOL, )
OPERATOR, *
NUMBER, 2
OPERATOR, +
NUMBER, 1
SYMBOL, ;
SYMBOL, }
IDENTIFIER, while
SYMBOL, (
IDENTIFIER, x
REL_OPERATOR, >
NUMBER, 7
SYMBOL, )
SYMBOL, ;
IDENTIFIER, cin
IDENTIFIER, x
SYMBOL, ;
IDENTIFIER, while
SYMBOL, (
IDENTIFIER, y
REL_OPERATOR, ==
NUMBER, 0
SYMBOL, )
SYMBOL, {
IDENTIFIER, cin
IDENTIFIER, mas
SYMBOL, ;
IDENTIFIER, cout
IDENTIFIER, x
SYMBOL, ;
SYMBOL, }
SYMBOL, }
