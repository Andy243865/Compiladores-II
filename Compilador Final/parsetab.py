
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BREAK CASE CIN COMMA COUT DIFF DIVIDE DO DOUBLE ELSE EQ FOR GREATT GREATTEQ ID IF INT LCOR LESST LESSTEQ LKEY LPAREN MAIN MINUS MINUSMINUS MODULE NUMBER OR PCOMMA PEPE PLUS PLUSPLUS POW RCOR REALNUMBER RKEY RPAREN STRING STRINGKY SWITCH TIMES WHILE foo_NUMBERprogram : mainmain : MAIN LKEY declarations RKEYdeclarations : declarations declaration\n                    | declarationdeclaration : declaration_variable\n                   | statementdeclaration_variable : type variable PCOMMAvariable : variable COMMA ID\n                | IDtype : INT\n            | DOUBLE\n            | STRINGKYstatements : statements statement\n                  | statementstatement : compound_statement\n                 | assign_statement\n                 | select_statement\n                 | iteration_statement\n                 | cin_statement\n                 | cout_statement\n                 | switch_statement\n                 | doublefactscompound_statement : LKEY statements RKEYassign_statement : ID ASSIGN expression PCOMMAselect_statement : IF LPAREN expression RPAREN compound_statement\n                        | IF LPAREN expression RPAREN compound_statement ELSE compound_statementiteration_statement : WHILE LPAREN expression RPAREN compound_statement\n                           | DO compound_statement WHILE LPAREN expression RPAREN PCOMMAswitch_statement : SWITCH LPAREN expression RPAREN LKEY case_list RKEYcase_list : case_list case_statement \n                 | case_statementcase_statement : CASE facts PEPE statements BREAK PCOMMAcin_statement : CIN ID PCOMMAcout_statement : COUT expression PCOMMAexpression : simple_expression relation_operator simple_expression\n                  | simple_expressionrelation_operator : EQ\n                         | DIFF\n                         | LESST\n                         | LESSTEQ\n                         | GREATT\n                         | GREATTEQ\n                         | AND\n                         | ORsimple_expression : simple_expression sum_operator term\n                         | termsum_operator : PLUS\n                    | MINUSterm : term mult_operator factor \n            | factormult_operator : TIMES\n                     | DIVIDE\n                     | MODULEfactor : factor pot_operator component\n              | componentpot_operator : POWdoublefacts : ID PLUSPLUS PCOMMA\n                   | ID MINUSMINUS PCOMMAcomponent : LPAREN expression RPAREN\n                 | ID\n                 | facts\n                 | doublefactsfacts : NUMBER\n             | REALNUMBER\n             | STRINGempty : '
    
_lr_action_items = {'MAIN':([0,],[3,]),'$end':([1,2,31,],[0,-1,-2,]),'LKEY':([3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,25,29,30,32,55,56,57,60,61,65,66,88,89,90,97,98,99,102,107,108,109,112,113,],[4,5,5,5,-4,-5,-6,-15,-16,-17,-18,-19,-20,-21,-22,5,5,-14,-3,-23,-13,-7,-57,-58,-33,-34,-24,5,5,101,-25,-27,5,-26,-28,-29,5,5,]),'INT':([4,6,7,8,9,11,12,13,14,15,16,17,18,32,55,57,60,61,65,66,88,98,99,107,108,109,],[19,19,-4,-5,-6,-15,-16,-17,-18,-19,-20,-21,-22,-3,-23,-7,-57,-58,-33,-34,-24,-25,-27,-26,-28,-29,]),'DOUBLE':([4,6,7,8,9,11,12,13,14,15,16,17,18,32,55,57,60,61,65,66,88,98,99,107,108,109,],[20,20,-4,-5,-6,-15,-16,-17,-18,-19,-20,-21,-22,-3,-23,-7,-57,-58,-33,-34,-24,-25,-27,-26,-28,-29,]),'STRINGKY':([4,6,7,8,9,11,12,13,14,15,16,17,18,32,55,57,60,61,65,66,88,98,99,107,108,109,],[21,21,-4,-5,-6,-15,-16,-17,-18,-19,-20,-21,-22,-3,-23,-7,-57,-58,-33,-34,-24,-25,-27,-26,-28,-29,]),'ID':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,29,30,32,35,38,39,47,54,55,56,57,58,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,91,98,99,107,108,109,112,113,],[22,22,22,-4,-5,-6,34,-15,-16,-17,-18,-19,-20,-21,-22,-10,-11,-12,41,48,22,-14,-3,48,48,48,48,48,-23,-13,-7,87,-57,-58,-33,-34,48,48,-37,-38,-39,-40,-41,-42,-43,-44,-47,-48,48,-51,-52,-53,48,-56,-24,48,-25,-27,-26,-28,-29,22,22,]),'IF':([4,5,6,7,8,9,11,12,13,14,15,16,17,18,29,30,32,55,56,57,60,61,65,66,88,98,99,107,108,109,112,113,],[23,23,23,-4,-5,-6,-15,-16,-17,-18,-19,-20,-21,-22,23,-14,-3,-23,-13,-7,-57,-58,-33,-34,-24,-25,-27,-26,-28,-29,23,23,]),'WHILE':([4,5,6,7,8,9,11,12,13,14,15,16,17,18,29,30,32,40,55,56,57,60,61,65,66,88,98,99,107,108,109,112,113,],[24,24,24,-4,-5,-6,-15,-16,-17,-18,-19,-20,-21,-22,24,-14,-3,64,-23,-13,-7,-57,-58,-33,-34,-24,-25,-27,-26,-28,-29,24,24,]),'DO':([4,5,6,7,8,9,11,12,13,14,15,16,17,18,29,30,32,55,56,57,60,61,65,66,88,98,99,107,108,109,112,113,],[25,25,25,-4,-5,-6,-15,-16,-17,-18,-19,-20,-21,-22,25,-14,-3,-23,-13,-7,-57,-58,-33,-34,-24,-25,-27,-26,-28,-29,25,25,]),'CIN':([4,5,6,7,8,9,11,12,13,14,15,16,17,18,29,30,32,55,56,57,60,61,65,66,88,98,99,107,108,109,112,113,],[26,26,26,-4,-5,-6,-15,-16,-17,-18,-19,-20,-21,-22,26,-14,-3,-23,-13,-7,-57,-58,-33,-34,-24,-25,-27,-26,-28,-29,26,26,]),'COUT':([4,5,6,7,8,9,11,12,13,14,15,16,17,18,29,30,32,55,56,57,60,61,65,66,88,98,99,107,108,109,112,113,],[27,27,27,-4,-5,-6,-15,-16,-17,-18,-19,-20,-21,-22,27,-14,-3,-23,-13,-7,-57,-58,-33,-34,-24,-25,-27,-26,-28,-29,27,27,]),'SWITCH':([4,5,6,7,8,9,11,12,13,14,15,16,17,18,29,30,32,55,56,57,60,61,65,66,88,98,99,107,108,109,112,113,],[28,28,28,-4,-5,-6,-15,-16,-17,-18,-19,-20,-21,-22,28,-14,-3,-23,-13,-7,-57,-58,-33,-34,-24,-25,-27,-26,-28,-29,28,28,]),'RKEY':([6,7,8,9,11,12,13,14,15,16,17,18,29,30,32,55,56,57,60,61,65,66,88,98,99,104,105,107,108,109,110,115,],[31,-4,-5,-6,-15,-16,-17,-18,-19,-20,-21,-22,55,-14,-3,-23,-13,-7,-57,-58,-33,-34,-24,-25,-27,109,-31,-26,-28,-29,-30,-32,]),'BREAK':([11,12,13,14,15,16,17,18,30,55,56,60,61,65,66,88,98,99,107,108,109,113,],[-15,-16,-17,-18,-19,-20,-21,-22,-14,-23,-13,-57,-58,-33,-34,-24,-25,-27,-26,-28,-29,114,]),'ASSIGN':([22,],[35,]),'PLUSPLUS':([22,48,],[36,36,]),'MINUSMINUS':([22,48,],[37,37,]),'LPAREN':([23,24,27,28,35,38,39,47,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,],[38,39,47,54,47,47,47,47,47,91,47,47,-37,-38,-39,-40,-41,-42,-43,-44,-47,-48,47,-51,-52,-53,47,-56,47,]),'NUMBER':([27,35,38,39,47,54,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,106,],[51,51,51,51,51,51,51,51,-37,-38,-39,-40,-41,-42,-43,-44,-47,-48,51,-51,-52,-53,51,-56,51,51,]),'REALNUMBER':([27,35,38,39,47,54,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,106,],[52,52,52,52,52,52,52,52,-37,-38,-39,-40,-41,-42,-43,-44,-47,-48,52,-51,-52,-53,52,-56,52,52,]),'STRING':([27,35,38,39,47,54,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,106,],[53,53,53,53,53,53,53,53,-37,-38,-39,-40,-41,-42,-43,-44,-47,-48,53,-51,-52,-53,53,-56,53,53,]),'PCOMMA':([33,34,36,37,41,42,43,44,45,46,48,49,50,51,52,53,59,60,61,87,92,93,94,95,96,103,114,],[57,-9,60,61,65,66,-36,-46,-50,-55,-60,-61,-62,-63,-64,-65,88,-57,-58,-8,-35,-45,-49,-54,-59,108,115,]),'COMMA':([33,34,87,],[58,-9,-8,]),'RPAREN':([43,44,45,46,48,49,50,51,52,53,60,61,62,63,85,86,92,93,94,95,96,100,],[-36,-46,-50,-55,-60,-61,-62,-63,-64,-65,-57,-58,89,90,96,97,-35,-45,-49,-54,-59,103,]),'EQ':([43,44,45,46,48,49,50,51,52,53,60,61,93,94,95,96,],[69,-46,-50,-55,-60,-61,-62,-63,-64,-65,-57,-58,-45,-49,-54,-59,]),'DIFF':([43,44,45,46,48,49,50,51,52,53,60,61,93,94,95,96,],[70,-46,-50,-55,-60,-61,-62,-63,-64,-65,-57,-58,-45,-49,-54,-59,]),'LESST':([43,44,45,46,48,49,50,51,52,53,60,61,93,94,95,96,],[71,-46,-50,-55,-60,-61,-62,-63,-64,-65,-57,-58,-45,-49,-54,-59,]),'LESSTEQ':([43,44,45,46,48,49,50,51,52,53,60,61,93,94,95,96,],[72,-46,-50,-55,-60,-61,-62,-63,-64,-65,-57,-58,-45,-49,-54,-59,]),'GREATT':([43,44,45,46,48,49,50,51,52,53,60,61,93,94,95,96,],[73,-46,-50,-55,-60,-61,-62,-63,-64,-65,-57,-58,-45,-49,-54,-59,]),'GREATTEQ':([43,44,45,46,48,49,50,51,52,53,60,61,93,94,95,96,],[74,-46,-50,-55,-60,-61,-62,-63,-64,-65,-57,-58,-45,-49,-54,-59,]),'AND':([43,44,45,46,48,49,50,51,52,53,60,61,93,94,95,96,],[75,-46,-50,-55,-60,-61,-62,-63,-64,-65,-57,-58,-45,-49,-54,-59,]),'OR':([43,44,45,46,48,49,50,51,52,53,60,61,93,94,95,96,],[76,-46,-50,-55,-60,-61,-62,-63,-64,-65,-57,-58,-45,-49,-54,-59,]),'PLUS':([43,44,45,46,48,49,50,51,52,53,60,61,92,93,94,95,96,],[77,-46,-50,-55,-60,-61,-62,-63,-64,-65,-57,-58,77,-45,-49,-54,-59,]),'MINUS':([43,44,45,46,48,49,50,51,52,53,60,61,92,93,94,95,96,],[78,-46,-50,-55,-60,-61,-62,-63,-64,-65,-57,-58,78,-45,-49,-54,-59,]),'TIMES':([44,45,46,48,49,50,51,52,53,60,61,93,94,95,96,],[80,-50,-55,-60,-61,-62,-63,-64,-65,-57,-58,80,-49,-54,-59,]),'DIVIDE':([44,45,46,48,49,50,51,52,53,60,61,93,94,95,96,],[81,-50,-55,-60,-61,-62,-63,-64,-65,-57,-58,81,-49,-54,-59,]),'MODULE':([44,45,46,48,49,50,51,52,53,60,61,93,94,95,96,],[82,-50,-55,-60,-61,-62,-63,-64,-65,-57,-58,82,-49,-54,-59,]),'POW':([45,46,48,49,50,51,52,53,60,61,94,95,96,],[84,-55,-60,-61,-62,-63,-64,-65,-57,-58,84,-54,-59,]),'PEPE':([51,52,53,111,],[-63,-64,-65,112,]),'ELSE':([55,98,],[-23,102,]),'CASE':([101,104,105,110,115,],[106,106,-31,-30,-32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'main':([0,],[2,]),'declarations':([4,],[6,]),'declaration':([4,6,],[7,32,]),'declaration_variable':([4,6,],[8,8,]),'statement':([4,5,6,29,112,113,],[9,30,9,56,30,56,]),'type':([4,6,],[10,10,]),'compound_statement':([4,5,6,25,29,89,90,102,112,113,],[11,11,11,40,11,98,99,107,11,11,]),'assign_statement':([4,5,6,29,112,113,],[12,12,12,12,12,12,]),'select_statement':([4,5,6,29,112,113,],[13,13,13,13,13,13,]),'iteration_statement':([4,5,6,29,112,113,],[14,14,14,14,14,14,]),'cin_statement':([4,5,6,29,112,113,],[15,15,15,15,15,15,]),'cout_statement':([4,5,6,29,112,113,],[16,16,16,16,16,16,]),'switch_statement':([4,5,6,29,112,113,],[17,17,17,17,17,17,]),'doublefacts':([4,5,6,27,29,35,38,39,47,54,67,68,79,83,91,112,113,],[18,18,18,50,18,50,50,50,50,50,50,50,50,50,50,18,18,]),'statements':([5,112,],[29,113,]),'variable':([10,],[33,]),'expression':([27,35,38,39,47,54,91,],[42,59,62,63,85,86,100,]),'simple_expression':([27,35,38,39,47,54,67,91,],[43,43,43,43,43,43,92,43,]),'term':([27,35,38,39,47,54,67,68,91,],[44,44,44,44,44,44,44,93,44,]),'factor':([27,35,38,39,47,54,67,68,79,91,],[45,45,45,45,45,45,45,45,94,45,]),'component':([27,35,38,39,47,54,67,68,79,83,91,],[46,46,46,46,46,46,46,46,46,95,46,]),'facts':([27,35,38,39,47,54,67,68,79,83,91,106,],[49,49,49,49,49,49,49,49,49,49,49,111,]),'relation_operator':([43,],[67,]),'sum_operator':([43,92,],[68,68,]),'mult_operator':([44,93,],[79,79,]),'pot_operator':([45,94,],[83,83,]),'case_list':([101,],[104,]),'case_statement':([101,104,],[105,110,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> main','program',1,'p_program','sintactico.py',12),
  ('main -> MAIN LKEY declarations RKEY','main',4,'p_main','sintactico.py',16),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','sintactico.py',20),
  ('declarations -> declaration','declarations',1,'p_declarations','sintactico.py',21),
  ('declaration -> declaration_variable','declaration',1,'p_declaration','sintactico.py',28),
  ('declaration -> statement','declaration',1,'p_declaration','sintactico.py',29),
  ('declaration_variable -> type variable PCOMMA','declaration_variable',3,'p_declaration_variable','sintactico.py',33),
  ('variable -> variable COMMA ID','variable',3,'p_variable','sintactico.py',65),
  ('variable -> ID','variable',1,'p_variable','sintactico.py',66),
  ('type -> INT','type',1,'p_type','sintactico.py',73),
  ('type -> DOUBLE','type',1,'p_type','sintactico.py',74),
  ('type -> STRINGKY','type',1,'p_type','sintactico.py',75),
  ('statements -> statements statement','statements',2,'p_statements','sintactico.py',79),
  ('statements -> statement','statements',1,'p_statements','sintactico.py',80),
  ('statement -> compound_statement','statement',1,'p_statement','sintactico.py',87),
  ('statement -> assign_statement','statement',1,'p_statement','sintactico.py',88),
  ('statement -> select_statement','statement',1,'p_statement','sintactico.py',89),
  ('statement -> iteration_statement','statement',1,'p_statement','sintactico.py',90),
  ('statement -> cin_statement','statement',1,'p_statement','sintactico.py',91),
  ('statement -> cout_statement','statement',1,'p_statement','sintactico.py',92),
  ('statement -> switch_statement','statement',1,'p_statement','sintactico.py',93),
  ('statement -> doublefacts','statement',1,'p_statement','sintactico.py',94),
  ('compound_statement -> LKEY statements RKEY','compound_statement',3,'p_compound_statement','sintactico.py',98),
  ('assign_statement -> ID ASSIGN expression PCOMMA','assign_statement',4,'p_assign_statement','sintactico.py',103),
  ('select_statement -> IF LPAREN expression RPAREN compound_statement','select_statement',5,'p_select_statement','sintactico.py',204),
  ('select_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement','select_statement',7,'p_select_statement','sintactico.py',205),
  ('iteration_statement -> WHILE LPAREN expression RPAREN compound_statement','iteration_statement',5,'p_iteration_statement','sintactico.py',212),
  ('iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN PCOMMA','iteration_statement',7,'p_iteration_statement','sintactico.py',213),
  ('switch_statement -> SWITCH LPAREN expression RPAREN LKEY case_list RKEY','switch_statement',7,'p_switch_statement','sintactico.py',220),
  ('case_list -> case_list case_statement','case_list',2,'p_case_list','sintactico.py',224),
  ('case_list -> case_statement','case_list',1,'p_case_list','sintactico.py',225),
  ('case_statement -> CASE facts PEPE statements BREAK PCOMMA','case_statement',6,'p_case_statement','sintactico.py',232),
  ('cin_statement -> CIN ID PCOMMA','cin_statement',3,'p_cin_statement','sintactico.py',236),
  ('cout_statement -> COUT expression PCOMMA','cout_statement',3,'p_cout_statement','sintactico.py',240),
  ('expression -> simple_expression relation_operator simple_expression','expression',3,'p_expression','sintactico.py',245),
  ('expression -> simple_expression','expression',1,'p_expression','sintactico.py',246),
  ('relation_operator -> EQ','relation_operator',1,'p_relation_operator','sintactico.py',286),
  ('relation_operator -> DIFF','relation_operator',1,'p_relation_operator','sintactico.py',287),
  ('relation_operator -> LESST','relation_operator',1,'p_relation_operator','sintactico.py',288),
  ('relation_operator -> LESSTEQ','relation_operator',1,'p_relation_operator','sintactico.py',289),
  ('relation_operator -> GREATT','relation_operator',1,'p_relation_operator','sintactico.py',290),
  ('relation_operator -> GREATTEQ','relation_operator',1,'p_relation_operator','sintactico.py',291),
  ('relation_operator -> AND','relation_operator',1,'p_relation_operator','sintactico.py',292),
  ('relation_operator -> OR','relation_operator',1,'p_relation_operator','sintactico.py',293),
  ('simple_expression -> simple_expression sum_operator term','simple_expression',3,'p_simple_expression','sintactico.py',314),
  ('simple_expression -> term','simple_expression',1,'p_simple_expression','sintactico.py',315),
  ('sum_operator -> PLUS','sum_operator',1,'p_sum_operator','sintactico.py',332),
  ('sum_operator -> MINUS','sum_operator',1,'p_sum_operator','sintactico.py',333),
  ('term -> term mult_operator factor','term',3,'p_term','sintactico.py',337),
  ('term -> factor','term',1,'p_term','sintactico.py',338),
  ('mult_operator -> TIMES','mult_operator',1,'p_mult_operator','sintactico.py',373),
  ('mult_operator -> DIVIDE','mult_operator',1,'p_mult_operator','sintactico.py',374),
  ('mult_operator -> MODULE','mult_operator',1,'p_mult_operator','sintactico.py',375),
  ('factor -> factor pot_operator component','factor',3,'p_factor','sintactico.py',379),
  ('factor -> component','factor',1,'p_factor','sintactico.py',380),
  ('pot_operator -> POW','pot_operator',1,'p_pot_operator','sintactico.py',392),
  ('doublefacts -> ID PLUSPLUS PCOMMA','doublefacts',3,'p_doublefacts','sintactico.py',397),
  ('doublefacts -> ID MINUSMINUS PCOMMA','doublefacts',3,'p_doublefacts','sintactico.py',398),
  ('component -> LPAREN expression RPAREN','component',3,'p_component','sintactico.py',427),
  ('component -> ID','component',1,'p_component','sintactico.py',428),
  ('component -> facts','component',1,'p_component','sintactico.py',429),
  ('component -> doublefacts','component',1,'p_component','sintactico.py',430),
  ('facts -> NUMBER','facts',1,'p_facts','sintactico.py',443),
  ('facts -> REALNUMBER','facts',1,'p_facts','sintactico.py',444),
  ('facts -> STRING','facts',1,'p_facts','sintactico.py',445),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',450),
]
