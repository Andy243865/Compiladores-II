
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BOOL BOOL_VALUE COMMA COMMENT DIVIDE DO ELSE EQUALS FI FLOAT FLOAT_NUMBER GREATER GREATEREQUAL IDENTIFIER IF INT LBRACE LESS LESSEQUAL LPAREN MAIN MINUS MULTILINE_COMMENT NOTEQUALS NUMBER OR PLUS RBRACE READ RPAREN SEMICOLON THEN TIMES UNTIL WHILE WRITEmain : MAIN LBRACE declarations statements RBRACEdeclarations : declarations declaration\n                    | emptyread_statement : READ IDENTIFIER SEMICOLONdeclaration : INT var_list SEMICOLON\n                   | FLOAT var_list SEMICOLON\n                   | BOOL var_list SEMICOLONvar_list : var_list COMMA IDENTIFIER\n                | IDENTIFIERstatements : statements statement\n                  | emptystatement : assignment\n                 | if_statement\n                 | write_statement\n                 | read_statement \n                 | do_statement\n                 | while_statementassignment : IDENTIFIER ASSIGN expression SEMICOLONif_statement : IF LPAREN condition RPAREN THEN LBRACE statements RBRACE ELSE LBRACE statements RBRACE FI\n                    | IF LPAREN condition RPAREN THEN LBRACE statements RBRACE FIwrite_statement : WRITE expression SEMICOLONdo_statement : DO LBRACE statements RBRACE WHILE LPAREN condition RPAREN SEMICOLONwhile_statement : WHILE LPAREN condition RPAREN LBRACE statements RBRACEexpression : expression PLUS term\n                  | expression MINUS term\n                  | termterm : term TIMES factor\n            | term DIVIDE factor\n            | factorfactor : LPAREN expression RPAREN\n              | NUMBER\n              | FLOAT_NUMBER\n              | IDENTIFIERcondition : expression EQUALS expression\n                 | expression NOTEQUALS expression\n                 | expression LESS expression\n                 | expression LESSEQUAL expression\n                 | expression GREATER expression\n                 | expression GREATEREQUAL expression\n                 | expression AND expression\n                 | expression OR expressionempty :expression : expression PLUS empty\n                  | expression MINUS empty'
    
_lr_action_items = {'MAIN':([0,],[2,]),'$end':([1,12,],[0,-1,]),'LBRACE':([2,24,77,78,97,],[3,40,88,89,100,]),'INT':([3,4,5,7,42,44,45,],[-42,9,-3,-2,-5,-6,-7,]),'FLOAT':([3,4,5,7,42,44,45,],[-42,10,-3,-2,-5,-6,-7,]),'BOOL':([3,4,5,7,42,44,45,],[-42,11,-3,-2,-5,-6,-7,]),'RBRACE':([3,4,5,6,7,8,13,14,15,16,17,18,19,40,42,44,45,49,55,56,59,88,89,91,92,94,98,99,100,101,103,],[-42,-42,-3,12,-2,-11,-10,-12,-13,-14,-15,-16,-17,-42,-5,-6,-7,-21,-4,76,-18,-42,-42,94,95,-23,-20,-22,-42,102,-19,]),'IDENTIFIER':([3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,22,23,30,31,35,40,41,42,43,44,45,49,50,51,52,53,55,56,59,61,62,63,64,65,66,67,68,88,89,90,91,92,94,98,99,100,101,103,],[-42,-42,-3,20,-2,-11,27,27,27,-10,-12,-13,-14,-15,-16,-17,38,39,38,38,38,-42,38,-5,58,-6,-7,-21,38,38,38,38,-4,20,-18,38,38,38,38,38,38,38,38,-42,-42,38,20,20,-23,-20,-22,-42,20,-19,]),'IF':([3,4,5,6,7,8,13,14,15,16,17,18,19,40,42,44,45,49,55,56,59,88,89,91,92,94,98,99,100,101,103,],[-42,-42,-3,21,-2,-11,-10,-12,-13,-14,-15,-16,-17,-42,-5,-6,-7,-21,-4,21,-18,-42,-42,21,21,-23,-20,-22,-42,21,-19,]),'WRITE':([3,4,5,6,7,8,13,14,15,16,17,18,19,40,42,44,45,49,55,56,59,88,89,91,92,94,98,99,100,101,103,],[-42,-42,-3,22,-2,-11,-10,-12,-13,-14,-15,-16,-17,-42,-5,-6,-7,-21,-4,22,-18,-42,-42,22,22,-23,-20,-22,-42,22,-19,]),'READ':([3,4,5,6,7,8,13,14,15,16,17,18,19,40,42,44,45,49,55,56,59,88,89,91,92,94,98,99,100,101,103,],[-42,-42,-3,23,-2,-11,-10,-12,-13,-14,-15,-16,-17,-42,-5,-6,-7,-21,-4,23,-18,-42,-42,23,23,-23,-20,-22,-42,23,-19,]),'DO':([3,4,5,6,7,8,13,14,15,16,17,18,19,40,42,44,45,49,55,56,59,88,89,91,92,94,98,99,100,101,103,],[-42,-42,-3,24,-2,-11,-10,-12,-13,-14,-15,-16,-17,-42,-5,-6,-7,-21,-4,24,-18,-42,-42,24,24,-23,-20,-22,-42,24,-19,]),'WHILE':([3,4,5,6,7,8,13,14,15,16,17,18,19,40,42,44,45,49,55,56,59,76,88,89,91,92,94,98,99,100,101,103,],[-42,-42,-3,25,-2,-11,-10,-12,-13,-14,-15,-16,-17,-42,-5,-6,-7,-21,-4,25,-18,87,-42,-42,25,25,-23,-20,-22,-42,25,-19,]),'ASSIGN':([20,],[30,]),'LPAREN':([21,22,25,30,31,35,41,50,51,52,53,61,62,63,64,65,66,67,68,87,90,],[31,35,41,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,90,35,]),'NUMBER':([22,30,31,35,41,50,51,52,53,61,62,63,64,65,66,67,68,90,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'FLOAT_NUMBER':([22,30,31,35,41,50,51,52,53,61,62,63,64,65,66,67,68,90,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'SEMICOLON':([26,27,28,29,32,33,34,36,37,38,39,46,50,51,58,69,70,71,72,73,74,75,96,],[42,-9,44,45,49,-26,-29,-31,-32,-33,55,59,-42,-42,-8,-24,-43,-25,-44,-27,-28,-30,99,]),'COMMA':([26,27,28,29,58,],[43,-9,43,43,-8,]),'PLUS':([32,33,34,36,37,38,46,48,50,51,54,69,70,71,72,73,74,75,79,80,81,82,83,84,85,86,],[50,-26,-29,-31,-32,-33,50,50,-42,-42,50,-24,-43,-25,-44,-27,-28,-30,50,50,50,50,50,50,50,50,]),'MINUS':([32,33,34,36,37,38,46,48,50,51,54,69,70,71,72,73,74,75,79,80,81,82,83,84,85,86,],[51,-26,-29,-31,-32,-33,51,51,-42,-42,51,-24,-43,-25,-44,-27,-28,-30,51,51,51,51,51,51,51,51,]),'EQUALS':([33,34,36,37,38,48,50,51,69,70,71,72,73,74,75,],[-26,-29,-31,-32,-33,61,-42,-42,-24,-43,-25,-44,-27,-28,-30,]),'NOTEQUALS':([33,34,36,37,38,48,50,51,69,70,71,72,73,74,75,],[-26,-29,-31,-32,-33,62,-42,-42,-24,-43,-25,-44,-27,-28,-30,]),'LESS':([33,34,36,37,38,48,50,51,69,70,71,72,73,74,75,],[-26,-29,-31,-32,-33,63,-42,-42,-24,-43,-25,-44,-27,-28,-30,]),'LESSEQUAL':([33,34,36,37,38,48,50,51,69,70,71,72,73,74,75,],[-26,-29,-31,-32,-33,64,-42,-42,-24,-43,-25,-44,-27,-28,-30,]),'GREATER':([33,34,36,37,38,48,50,51,69,70,71,72,73,74,75,],[-26,-29,-31,-32,-33,65,-42,-42,-24,-43,-25,-44,-27,-28,-30,]),'GREATEREQUAL':([33,34,36,37,38,48,50,51,69,70,71,72,73,74,75,],[-26,-29,-31,-32,-33,66,-42,-42,-24,-43,-25,-44,-27,-28,-30,]),'AND':([33,34,36,37,38,48,50,51,69,70,71,72,73,74,75,],[-26,-29,-31,-32,-33,67,-42,-42,-24,-43,-25,-44,-27,-28,-30,]),'OR':([33,34,36,37,38,48,50,51,69,70,71,72,73,74,75,],[-26,-29,-31,-32,-33,68,-42,-42,-24,-43,-25,-44,-27,-28,-30,]),'RPAREN':([33,34,36,37,38,47,50,51,54,57,69,70,71,72,73,74,75,79,80,81,82,83,84,85,86,93,],[-26,-29,-31,-32,-33,60,-42,-42,75,77,-24,-43,-25,-44,-27,-28,-30,-34,-35,-36,-37,-38,-39,-40,-41,96,]),'TIMES':([33,34,36,37,38,69,71,73,74,75,],[52,-29,-31,-32,-33,52,52,-27,-28,-30,]),'DIVIDE':([33,34,36,37,38,69,71,73,74,75,],[53,-29,-31,-32,-33,53,53,-27,-28,-30,]),'THEN':([60,],[78,]),'ELSE':([95,],[97,]),'FI':([95,102,],[98,103,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'declarations':([3,],[4,]),'empty':([3,4,40,50,51,88,89,100,],[5,8,8,70,72,8,8,8,]),'statements':([4,40,88,89,100,],[6,56,91,92,101,]),'declaration':([4,],[7,]),'statement':([6,56,91,92,101,],[13,13,13,13,13,]),'assignment':([6,56,91,92,101,],[14,14,14,14,14,]),'if_statement':([6,56,91,92,101,],[15,15,15,15,15,]),'write_statement':([6,56,91,92,101,],[16,16,16,16,16,]),'read_statement':([6,56,91,92,101,],[17,17,17,17,17,]),'do_statement':([6,56,91,92,101,],[18,18,18,18,18,]),'while_statement':([6,56,91,92,101,],[19,19,19,19,19,]),'var_list':([9,10,11,],[26,28,29,]),'expression':([22,30,31,35,41,61,62,63,64,65,66,67,68,90,],[32,46,48,54,48,79,80,81,82,83,84,85,86,48,]),'term':([22,30,31,35,41,50,51,61,62,63,64,65,66,67,68,90,],[33,33,33,33,33,69,71,33,33,33,33,33,33,33,33,33,]),'factor':([22,30,31,35,41,50,51,52,53,61,62,63,64,65,66,67,68,90,],[34,34,34,34,34,34,34,73,74,34,34,34,34,34,34,34,34,34,]),'condition':([31,41,90,],[47,57,93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> MAIN LBRACE declarations statements RBRACE','main',5,'p_main','parser.py',9),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','parser.py',13),
  ('declarations -> empty','declarations',1,'p_declarations','parser.py',14),
  ('read_statement -> READ IDENTIFIER SEMICOLON','read_statement',3,'p_read_statement','parser.py',21),
  ('declaration -> INT var_list SEMICOLON','declaration',3,'p_declaration','parser.py',28),
  ('declaration -> FLOAT var_list SEMICOLON','declaration',3,'p_declaration','parser.py',29),
  ('declaration -> BOOL var_list SEMICOLON','declaration',3,'p_declaration','parser.py',30),
  ('var_list -> var_list COMMA IDENTIFIER','var_list',3,'p_var_list','parser.py',49),
  ('var_list -> IDENTIFIER','var_list',1,'p_var_list','parser.py',50),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',60),
  ('statements -> empty','statements',1,'p_statements','parser.py',61),
  ('statement -> assignment','statement',1,'p_statement','parser.py',68),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',69),
  ('statement -> write_statement','statement',1,'p_statement','parser.py',70),
  ('statement -> read_statement','statement',1,'p_statement','parser.py',71),
  ('statement -> do_statement','statement',1,'p_statement','parser.py',72),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',73),
  ('assignment -> IDENTIFIER ASSIGN expression SEMICOLON','assignment',4,'p_assignment','parser.py',79),
  ('if_statement -> IF LPAREN condition RPAREN THEN LBRACE statements RBRACE ELSE LBRACE statements RBRACE FI','if_statement',13,'p_if_statement','parser.py',128),
  ('if_statement -> IF LPAREN condition RPAREN THEN LBRACE statements RBRACE FI','if_statement',9,'p_if_statement','parser.py',129),
  ('write_statement -> WRITE expression SEMICOLON','write_statement',3,'p_write_statement','parser.py',136),
  ('do_statement -> DO LBRACE statements RBRACE WHILE LPAREN condition RPAREN SEMICOLON','do_statement',9,'p_do_statement','parser.py',140),
  ('while_statement -> WHILE LPAREN condition RPAREN LBRACE statements RBRACE','while_statement',7,'p_while_statement','parser.py',146),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',150),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',151),
  ('expression -> term','expression',1,'p_expression','parser.py',152),
  ('term -> term TIMES factor','term',3,'p_term','parser.py',164),
  ('term -> term DIVIDE factor','term',3,'p_term','parser.py',165),
  ('term -> factor','term',1,'p_term','parser.py',166),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',178),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',179),
  ('factor -> FLOAT_NUMBER','factor',1,'p_factor','parser.py',180),
  ('factor -> IDENTIFIER','factor',1,'p_factor','parser.py',181),
  ('condition -> expression EQUALS expression','condition',3,'p_condition','parser.py',198),
  ('condition -> expression NOTEQUALS expression','condition',3,'p_condition','parser.py',199),
  ('condition -> expression LESS expression','condition',3,'p_condition','parser.py',200),
  ('condition -> expression LESSEQUAL expression','condition',3,'p_condition','parser.py',201),
  ('condition -> expression GREATER expression','condition',3,'p_condition','parser.py',202),
  ('condition -> expression GREATEREQUAL expression','condition',3,'p_condition','parser.py',203),
  ('condition -> expression AND expression','condition',3,'p_condition','parser.py',204),
  ('condition -> expression OR expression','condition',3,'p_condition','parser.py',205),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',211),
  ('expression -> expression PLUS empty','expression',3,'p_expression_incomplete','parser.py',225),
  ('expression -> expression MINUS empty','expression',3,'p_expression_incomplete','parser.py',226),
]
